const fs = require("fs-extra"); const yts = require("yt-search"); const path = require("path"); const os = require("os"); const childProcess = require("child_process"); module.exports = { config: { name: "video", aliases: ["v"], version: "1.3", role: 0, author: "AceGun", cooldowns: 5, shortdescription: "download music video from YouTube", longdescription: "", category: "media", usages: "{pn} video name", dependencies: { "fs-extra": "^10.0.0", "axios": "^0.24.0", "ytdl-core": "^5.0.5", "yt-search": "^2.6.1" } }, onStart: async ({ api, event }) => { const input = event.body; const text = input.substring(12); const data = input.split(" "); if (data.length < 2) { return api.sendMessage("Please specify a video name.", event.threadID); } data.shift(); const videoName = data.join(" "); try { api.setMessageReaction("⌛", event.messageID, () => { }, true); const searchResults = await yts(videoName); if (!searchResults.videos.length) { return api.sendMessage("No videos found.", event.threadID, event.messageID); } const video = searchResults.videos[0]; const videoUrl = video.url; const curlCommand = `curl -X POST \ https://cnvmp3.com/fetch.php \ -H 'Content-Type: application/json' \ -d '{"url": "${videoUrl}", "isAudioOnly": false, "filenamePattern": "pretty"}'`; const output = childProcess.execSync(curlCommand); const jsonData = JSON.parse(output.toString()); const videoDownloadUrl = jsonData.url; const tempFolder = fs.mkdtempSync(path.join(os.tmpdir(), 'video-')); const randomFilename = `${Date.now()}.mp4`; const filePath = path.join(tempFolder, randomFilename); const downloadCommand = `curl -o ${filePath} "${videoDownloadUrl}"`; childProcess.execSync(downloadCommand); const stream = fs.createReadStream(filePath); api.sendMessage({ body: `💁‍♀ | Here's your video\n\n🔮 | Title: ${video.title}\n⏰ | Duration: ${video.duration.timestamp}`, attachment: stream }, event.threadID, () => { fs.unlinkSync(filePath); fs.rmdirSync(tempFolder); }); await api.setMessageReaction("✅", event.messageID); } catch (err) { api.setMessageReaction("❌", event.messageID, () => { }, true); console.error(`Error: ${err.message}`); return; } } };
